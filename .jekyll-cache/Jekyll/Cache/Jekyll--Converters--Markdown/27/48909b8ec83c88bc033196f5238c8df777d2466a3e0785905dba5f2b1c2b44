I"ˆ<p>Hello there,</p>

<p>Today I was helping a developer with some CI problems when the deploy was crashing with S3 Access Denied.
Here we use a local Gitlab and Gitlab Runner to build the vast majority of our projects, one thing that when I start to work with Gitlab was to be aware of every change you made on the Runner server, this usually broke some pipes and you never know why, so I‚Äôd to troubleshoot a lot in my first months but after I get the hang of it we create a pattern that fix most of the problems and now is very hard some error appear.</p>

<p>Now the problem, one of my coworkers came to me with the error below on the pipeline and asking to add the permission to the AWS Key used on the pipeline to run our deploy on Homologation.</p>

<figure class="highlight"><pre><code class="language-yaml" data-lang="yaml"><span class="s">$ aws s3 rm $HLG_S3 --recursive</span>
<span class="na">fatal error</span><span class="pi">:</span> <span class="s">An error occurred (AccessDenied) when calling the ListObjectsV2 operation</span><span class="pi">:</span> <span class="s">Access Denied</span>
<span class="na">ERROR</span><span class="pi">:</span> <span class="na">Job failed</span><span class="pi">:</span> <span class="s">command terminated with exit code 1</span></code></pre></figure>

<p>Looking at the AWS IAM the user had full permissions on the Bucket in question, so I ask to look at the project in Gitlab because theres two options, or the AWS Key is wrong or something changed in the project and in fact the runner changed, they started to use a docker runner prior a EC2 that we used to have. So in this new context I went to check how are the ‚Äú.gitlab-ci.yml‚Äù was configurated and everything looked Ok, below is the code snippet of the deploy for homologation.</p>

<figure class="highlight"><pre><code class="language-yaml" data-lang="yaml"><span class="na">deploy-homolog</span><span class="pi">:</span>
<span class="na">stage</span><span class="pi">:</span> <span class="s">deploy</span>
<span class="na">variables</span><span class="pi">:</span>
    <span class="na">AWS_ACCESS_KEY_ID</span><span class="pi">:</span> <span class="s">$HLG_KEY_ID</span>
    <span class="na">AWS_SECRET_ACCESS_KEY</span><span class="pi">:</span> <span class="s">$HLG_KEY_SECRET</span>
<span class="na">script</span><span class="pi">:</span>
    <span class="pi">-</span> <span class="s">aws s3 rm $HLG_S3 --recursive</span>
    <span class="pi">-</span> <span class="s">aws s3 cp ./release/ $HLG_S3 --recursive</span>
    <span class="pi">-</span> <span class="s">aws cloudfront create-invalidation --distribution-id $HLG_CLOUDFRONT_ID --paths '/*'</span>
<span class="na">environment</span><span class="pi">:</span> <span class="s">Homolog</span>
<span class="na">when</span><span class="pi">:</span> <span class="s">on_success</span>
<span class="na">variables</span><span class="pi">:</span>
    <span class="na">GIT_STRATEGY</span><span class="pi">:</span> <span class="s">none</span>
<span class="na">only</span><span class="pi">:</span>
    <span class="pi">-</span> <span class="s">homolog</span></code></pre></figure>

<p>Going to ‚ÄòSettings -&gt; CI / CD -&gt; Variables‚Äô the homolog key was indeed correct, so what was wrong? Maybe the Variable wasn‚Äôt been correct exported to the new Runner, so I went to check.
I first added the line <code class="highlighter-rouge">- echo $AWS_ACCESS_KEY_ID</code> on the file ‚Äú.gitlab-ci.yml‚Äù before the script to be the first line executed, and as I thought the variable was empty.</p>

<figure class="highlight"><pre><code class="language-yaml" data-lang="yaml"><span class="s">$ echo $AWS_ACCESS_KEY_ID</span>

<span class="s">$ aws s3 rm $HLG_S3 --recursive</span>
<span class="na">fatal error</span><span class="pi">:</span> <span class="s">An error occurred (AccessDenied) when calling the ListObjectsV2 operation</span><span class="pi">:</span> <span class="s">Access Denied</span>
<span class="na">ERROR</span><span class="pi">:</span> <span class="na">Job failed</span><span class="pi">:</span> <span class="s">command terminated with exit code 1</span></code></pre></figure>

<p>Well, now I need to check if the variable from the Gitlab is beeing loaded on the runner, so I change the <code class="highlighter-rouge">- echo $AWS_ACCESS_KEY_ID</code> to a <code class="highlighter-rouge">- export</code> to list all variables and everything looks good.</p>

<figure class="highlight"><pre><code class="language-yaml" data-lang="yaml"><span class="s">$ export</span>
<span class="s">declare -x AWS_DEFAULT_REGION="[my region]"</span>
<span class="s">declare -x HLG_KEY_ID="[my key]"</span>
<span class="s">declare -x HLG_KEY_SECRET="[my secret]"</span>
<span class="s">declare -x PRD_KEY_ID="[my key]"</span>
<span class="s">declare -x PRD_KEY_SECRET="[my secret]"</span>
<span class="nn">...</span>
<span class="s">declare -x HLG_CLOUDFRONT_ID="[my cdn id]"</span>
<span class="s">declare -x PRD_CLOUDFRONT_ID="[my cdn id]"</span>
<span class="s">declare -x HLG_S3="s3://[my s3 endpoint]"</span>
<span class="s">declare -x PRD_S3="s3://[my s3 endpoint]"</span>
<span class="nn">...</span>
<span class="s">$ aws s3 rm $HLG_S3 --recursive</span>
<span class="na">fatal error</span><span class="pi">:</span> <span class="s">An error occurred (AccessDenied) when calling the ListObjectsV2 operation</span><span class="pi">:</span> <span class="s">Access Denied</span>
<span class="na">ERROR</span><span class="pi">:</span> <span class="na">Job failed</span><span class="pi">:</span> <span class="s">command terminated with exit code 1</span></code></pre></figure>

<p><em>Ps. I added within the brackets only the reference of what it is to no expose any sensitive information.</em></p>

<p>So the Gitlab indeed was fowarding the information but the runner wasn‚Äôt able to export to the variables, so now I felt stuck but not for long.
Looking at the history of the ‚Äú.gitlab-ci.yml‚Äù file I notice something that my eyes don‚Äôt notice in the first place, there was two <code class="highlighter-rouge">variables:</code> in the file, one in the beggining and other in the end.</p>

<p>I removed the second reference and start the pipeline once more, and jackpot! The job finished successfully.</p>

<figure class="highlight"><pre><code class="language-yaml" data-lang="yaml"><span class="s">$ aws s3 rm $HLG_S3 --recursive</span>
<span class="nn">...</span>
<span class="s">$ aws s3 cp ./release/ $HLG_S3 --recursive</span>
<span class="nn">...</span>
<span class="s">$ aws cloudfront create-invalidation --distribution-id $HLG_CLOUDFRONT_ID --paths '/*'</span>
<span class="nn">...</span>
<span class="s">Job succeeded</span></code></pre></figure>

<p>It was a easy fix mistake but take a hour to find and resolve and I search on google but nothing that could help. In the end I inform the developer because the last coworker changed the file to some tests and left the code with those two references and to adjust for the production pipeline.</p>

<p><br /><br />
I hope you find this useful to your troubleshootings as well.</p>

<figure class="highlight"><pre><code class="language-yaml" data-lang="yaml">    <span class="s">$ sp current                                                     [17:21:51]</span>
    <span class="s">Album        Piece of Mind (2015 Remaster)</span>
    <span class="s">AlbumArtist  Iron Maiden</span>
    <span class="s">Artist       Iron Maiden</span>
    <span class="s">Title        Where Eagles Dare - 2015 Remaster</span>
    <span class="s">https://open.spotify.com/track/5QtlbCKhAL70eQM9dbzoR8?si=Pu8vJzTGRd6OfDpF3XqjmQ</span></code></pre></figure>

:ET